2008-12-03  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* ccss-cairo/ccss-cairo-style.h:
	* configure.in:
	* libccss-gtk-1.pc.in:
	Hook up ccss-gtk with the build system.

2008-12-03  Robert Staudinger  <robsta@gnome.org>

	* ccss-gtk/Makefile.am:
	* ccss-gtk/ccss-gtk-grammar.c (ccss_gtk_grammar_create):
	* ccss-gtk/ccss-gtk-grammar.h:
	* ccss-gtk/ccss-gtk-style.c (ccss_gtk_style_serialize):
	* ccss-gtk/ccss-gtk-style.h:
	* ccss-gtk/ccss-gtk.c (ccss_gtk_init), (ccss_gtk_shutdown):
	* ccss-gtk/ccss-gtk.h:
	* ccss-gtk/ccss-gtk.sym:
	Skeleton implementation for gtk support, not in the build chain yet.

2008-12-02  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* ccss-cairo/ccss-image.c (load_image):
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/stylesheet.sgml:
	* ccss/ccss-grammar.c (ccss_grammar_create_stylesheet_from_buffer),
	(ccss_grammar_create_stylesheet_from_file):
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c (ccss_style_destroy):
	* ccss/ccss-stylesheet-priv.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_create),
	(ccss_stylesheet_add_from_file), (ccss_stylesheet_destroy),
	(ccss_stylesheet_reference), (ccss_stylesheet_get_reference_count),
	(ccss_stylesheet_query_type), (ccss_stylesheet_query):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym:
	Reference counting for `ccss_stylesheet_t'.

2008-12-02  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/Makefile.am:
	* ccss/Makefile.am:
	* examples/Makefile.am:
	Move local includes and libs before global ones.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (bg_image_parse),
	(background_factory), (background_attachment_create),
	(background_image_create), (background_position_create),
	(background_repeat_create), (background_size_create):
	* ccss-cairo/ccss-border-image-parser.c (border_image_create):
	* ccss-cairo/ccss-border-parser.c (border_color_factory),
	(border_style_factory), (border_width_factory),
	(border_factory_impl), (border_factory), (border_left_factory),
	(border_top_factory), (border_right_factory),
	(border_bottom_factory), (border_radius_create),
	(border_radius_factory), (border_style_create),
	(border_width_create):
	* ccss-cairo/ccss-color.c (ccss_color_parse), (ccss_color_create):
	* ccss-cairo/ccss-color.h:
	* ccss-cairo/ccss-image.c (ccss_image_parse):
	* ccss-cairo/ccss-image.h:
	* ccss-doc/tmpl/grammar.sgml:
	* ccss-doc/tmpl/node.sgml:
	* ccss-doc/tmpl/property.sgml:
	* ccss-doc/tmpl/stylesheet.sgml:
	* ccss/ccss-grammar-function.c (ccss_grammar_invoke_function):
	* ccss/ccss-grammar-parse.c (property_cb),
	(ccss_grammar_parse_file), (ccss_grammar_parse_buffer),
	(ccss_grammar_parse_inline):
	* ccss/ccss-grammar-priv.h:
	* ccss/ccss-grammar.c (ccss_grammar_create_stylesheet_from_buffer),
	(ccss_grammar_create_stylesheet_from_file):
	* ccss/ccss-grammar.h:
	* ccss/ccss-property-generic.c (property_create):
	* ccss/ccss-property.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_add_from_file),
	(query_node):
	* ccss/ccss-stylesheet.h:
	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (main):
	* examples/example-4.c (main):
	* examples/example-5.c (main):
	Pass user-data to property- and function-handlers.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* ccss-cairo/ccss-background-parser.c
	(background_attachment_create), (background_image_create),
	(background_position_create), (background_repeat_create),
	(background_size_create):
	* ccss-cairo/ccss-border-image-parser.c (border_image_create):
	* ccss-cairo/ccss-border-parser.c (border_radius_create),
	(border_style_create), (border_width_create):
	* ccss-cairo/ccss-color.c (ccss_color_create):
	* ccss-cairo/ccss-color.h:
	* ccss/ccss-property-generic.c (property_create):
	Get rid of unneeded casts.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c:
	* ccss/ccss-block.h:
	* ccss/ccss-function.h:
	* ccss/ccss-grammar-function.c:
	* ccss/ccss-grammar-parse.c:
	* ccss/ccss-grammar-priv.h:
	* ccss/ccss-grammar.c:
	* ccss/ccss-grammar.h:
	* ccss/ccss-macros.h:
	* ccss/ccss-node-priv.h:
	* ccss/ccss-node.c:
	* ccss/ccss-node.h:
	* ccss/ccss-priv.h:
	* ccss/ccss-property-generic.c:
	* ccss/ccss-property-generic.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c:
	* ccss/ccss-selector.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet-priv.h:
	* ccss/ccss-stylesheet.c:
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.c:
	* ccss/ccss.h:
	

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-grammar-parse.c (ccss_grammar_parse_file),
	(ccss_grammar_parse_buffer), (ccss_grammar_parse_inline):
	* ccss/ccss-grammar-priv.h:
	* ccss/ccss-grammar.c (ccss_grammar_create_stylesheet_from_buffer),
	(ccss_grammar_create_stylesheet_from_file):
	* ccss/ccss-stylesheet.c (ccss_stylesheet_add_from_file),
	(query_node):
	Improve internal naming consistency.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-stylesheet.c (ccss_stylesheet_add_from_file): support
	detection of errors from the retval.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo-doc/ccss-cairo-docs.sgml:
	* ccss-cairo-doc/ccss-cairo-sections.txt:
	* ccss-cairo-doc/tmpl/grammar.sgml:
	* ccss-doc/ccss-docs.sgml:
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/ccss-unused.sgml:
	* ccss-doc/tmpl/ccss.sgml:
	* ccss-doc/tmpl/grammar.sgml:
	* ccss-doc/tmpl/node.sgml:
	* ccss-doc/tmpl/property.sgml:
	* ccss-doc/tmpl/stylesheet.sgml:
	* ccss/ccss-grammar-priv.h:
	* ccss/ccss-grammar.c:
	Update docs.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-grammar-priv.h:
	Fix warnings / `make distcheck'.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (url), (main):
	* examples/example-4.c (font_family_new), (peek_property_class),
	(main):
	* examples/example-5.c (main):
	Move examples to `ccss_grammar_t'.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/Makefile.am:
	* ccss-cairo/ccss-background-parser.c (bg_image_parse),
	(background_factory), (background_attachment_create),
	(background_image_create), (background_position_create),
	(background_repeat_create), (background_size_create):
	* ccss-cairo/ccss-background.h:
	* ccss-cairo/ccss-border-image-parser.c (border_image_create):
	* ccss-cairo/ccss-border-image-parser.h:
	* ccss-cairo/ccss-border-image.h:
	* ccss-cairo/ccss-border-parser.c (border_color_factory),
	(border_style_factory), (border_width_factory),
	(border_factory_impl), (border_factory), (border_left_factory),
	(border_top_factory), (border_right_factory),
	(border_bottom_factory), (border_radius_create),
	(border_radius_factory), (border_style_create):
	* ccss-cairo/ccss-border.h:
	* ccss-cairo/ccss-cairo-grammar.c (ccss_cairo_grammar_create):
	* ccss-cairo/ccss-cairo-grammar.h:
	* ccss-cairo/ccss-cairo-property.h:
	* ccss-cairo/ccss-cairo-style-priv.h:
	* ccss-cairo/ccss-cairo-style.c:
	* ccss-cairo/ccss-cairo-style.h:
	* ccss-cairo/ccss-cairo.c (ccss_cairo_init):
	* ccss-cairo/ccss-cairo.h:
	* ccss-cairo/ccss-cairo.sym:
	* ccss-cairo/ccss-color.c (ccss_color_parse), (ccss_color_create):
	* ccss-cairo/ccss-color.h:
	* ccss-cairo/ccss-image.c (ccss_image_parse):
	* ccss-cairo/ccss-image.h:
	* ccss-cairo/ccss-position.h:
	* ccss/ccss-grammar-parse.c (property_cb):
	* ccss/ccss-property-generic.c (property_create):
	* ccss/ccss-property.h:
	* ccss/ccss-stylesheet-priv.h:
	* ccss/ccss-stylesheet.c:
	* ccss/ccss.h:
	Move ccss-cairo to `ccss_grammar_t'.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c:
	* ccss/ccss-function.h:
	* ccss/ccss-grammar-function.c (parse_args_r),
	(ccss_grammar_invoke_function):
	* ccss/ccss-grammar-parse.c (map_attribute_selector_match),
	(calculate_importance), (walk_additional_selector),
	(walk_simple_selector_r), (walk_selector), (start_selector_cb),
	(property_cb), (end_selector_cb), (ccss_parser_parse_file),
	(ccss_parser_parse_buffer), (ccss_parser_parse_inline):
	* ccss/ccss-grammar-priv.h:
	* ccss/ccss-grammar.c (ccss_grammar_create),
	(ccss_grammar_destroy), (ccss_grammar_reference),
	(ccss_grammar_get_reference_count), (ccss_grammar_add_properties),
	(ccss_grammar_add_functions),
	(ccss_grammar_create_stylesheet_from_buffer),
	(ccss_grammar_create_stylesheet_from_file):
	* ccss/ccss-grammar.h:
	* ccss/ccss-parser.c:
	* ccss/ccss-parser.h:
	* ccss/ccss-stylesheet-priv.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_fix_dangling_selectors),
	(ccss_stylesheet_add_from_file), (ccss_stylesheet_destroy),
	(query_node):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.c (ccss_init), (ccss_shutdown):
	* ccss/ccss.h:
	* ccss/ccss.sym:
	Introduce `ccss_grammar_t' to move away from global properties and functions.

2008-12-01  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c:
	* ccss-cairo/ccss-border-image-parser.c:
	* ccss-cairo/ccss-border-parser.c (border_style_create):
	* ccss-cairo/ccss-color.c (ccss_color_create),
	(ccss_color_destroy):
	* ccss-cairo/ccss-color.h:
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/ccss-unused.sgml:
	* ccss-doc/tmpl/property.sgml:
	* ccss-doc/tmpl/style.sgml:
	* ccss-doc/tmpl/stylesheet.sgml:
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c (ccss_block_create), (ccss_block_destroy):
	* ccss/ccss-parser.c (walk_additional_selector),
	(walk_simple_selector_r), (walk_selector), (start_selector_cb),
	(property_cb):
	* ccss/ccss-property-generic.c (property_create),
	(property_destroy):
	* ccss/ccss-property.h:
	* ccss/ccss-selector-group.c (free_set),
	(ccss_selector_group_create), (ccss_selector_group_destroy),
	(ccss_selector_group_clear_dangling_selectors):
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c (ccss_universal_selector_create),
	(universal_selector_destroy), (ccss_type_selector_create),
	(type_selector_destroy), (ccss_base_type_selector_create),
	(ccss_class_selector_create), (class_selector_destroy),
	(ccss_id_selector_create), (id_selector_destroy),
	(ccss_attribute_selector_create), (attribute_selector_destroy),
	(ccss_pseudo_class_selector_create),
	(pseudo_class_selector_destroy), (ccss_instance_selector_create),
	(instance_selector_destroy), (ccss_selector_destroy):
	* ccss/ccss-selector.h:
	* ccss/ccss-style.c (ccss_style_create), (ccss_style_destroy):
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_create),
	(ccss_stylesheet_create_from_buffer),
	(ccss_stylesheet_create_from_file),
	(ccss_stylesheet_add_from_file), (ccss_stylesheet_destroy),
	(query_node), (query_container_r):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym:
	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (main):
	* examples/example-4.c (main):
	* examples/example-5.c (main):
	Use cairo's create()/destroy() idiom instead of new()/free().

2008-11-28  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background.c (ccss_background_fill):
	* ccss-cairo/ccss-border.c (get_line_draw_func), (border):
	* ccss-cairo/ccss-cairo-style.c (ccss_cairo_style_draw_line),
	(gather_outline), (gather_background),
	(ccss_cairo_style_draw_rectangle),
	(ccss_cairo_style_draw_rectangle_with_gap):
	Get rid of built-in default properties.

2008-11-28  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_inherit):
	* ccss-cairo/ccss-border-parser.c (border_color_inherit),
	(border_style_inherit), (border_width_inherit),
	(border_side_inherit_impl), (border_radius_inherit):
	* ccss-cairo/ccss-cairo-style.c (ccss_cairo_style_get_double),
	(ccss_cairo_style_get_string), (ccss_cairo_style_get_property):
	* ccss-cairo/ccss-cairo-style.h:
	* ccss-doc/tmpl/style.sgml:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c (ccss_style_get_double),
	(ccss_style_get_string), (ccss_style_get_property):
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c (inherit_container_style):
	* examples/example-4.c (expose_cb):
	* examples/example-5.svg:
	Provide API to query ccss-cairo properties with fallbacks.

2008-11-27  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-border-image-parser.c (border_image_new):
	* examples/example-5.c:
	Fix `border-image: inherit;'.

2008-11-27  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-image.c (load_svg):
	* examples/example-5.c:
	* examples/example-5.svg:
	Use the jimmac-single-canvas-plates-approach to render sub-elements.

2008-11-27  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_inherit):
	* ccss-cairo/ccss-border-parser.c (border_color_inherit),
	(border_style_inherit), (border_width_inherit),
	(border_side_inherit_impl), (border_left_inherit),
	(border_top_inherit), (border_right_inherit),
	(border_bottom_inherit), (border_inherit), (border_radius_inherit):
	* ccss-doc/tmpl/property.sgml:
	* ccss/ccss-property.h:
	* ccss/ccss-stylesheet.c (inherit_container_style):
	Do not inherit properties that are themselves of state `inherit'.

2008-11-27  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-border-parser.c (border_color_factory),
	(border_color_inherit), (border_style_factory),
	(border_style_inherit), (border_width_factory),
	(border_width_inherit), (border_factory_impl),
	(border_radius_factory):
	* ccss-cairo/ccss-cairo-property.c
	(ccss_property_border_bottom_left_radius),
	(ccss_property_border_bottom_right_radius):
	Fix left/right border-radius mapping mixup.

2008-11-27  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_factory),
	(background_inherit):
	* ccss-cairo/ccss-background-parser.h:
	* ccss-cairo/ccss-border-parser.c (border_color_factory),
	(border_style_factory), (border_width_factory),
	(border_factory_impl), (border_side_inherit_impl),
	(border_left_inherit), (border_top_inherit),
	(border_right_inherit), (border_bottom_inherit), (border_inherit),
	(border_radius_factory), (border_radius_inherit):
	* ccss-cairo/ccss-border-parser.h:
	Fix style inheritance for `border'.

2008-11-26  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_factory):
	* ccss/ccss-style.c (ccss_style_get_double),
	(ccss_style_get_string), (ccss_style_get_property),
	(ccss_style_set_property):
	* ccss/ccss-stylesheet.c (inherit_container_style),
	(query_container_r), (ccss_stylesheet_query):
	Fix style inheritance for `background', more to come.

2008-11-26  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_factory),
	(background_inherit), (background_attachment_new),
	(background_image_new), (background_position_new),
	(background_repeat_new), (background_size_new):
	* ccss-cairo/ccss-border-image-parser.c:
	* ccss-cairo/ccss-border-parser.c (border_radius_new),
	(border_style_new), (border_width_new):
	* ccss-cairo/ccss-cairo-style.h:
	* ccss-cairo/ccss-color.c:
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/property.sgml:
	* ccss-doc/tmpl/style.sgml:
	* ccss/ccss-property-generic.c:
	* ccss/ccss-property.h:
	* ccss/ccss-style.c (ccss_style_set_property):
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c (inherit_container_style),
	(ccss_stylesheet_query):
	* ccss/ccss.sym:
	* examples/Makefile.am:
	Work on single-canvas support and style inheritance.

2008-11-26  Robert Staudinger  <robsta@gnome.org>

	* examples/example-5.c (expose_cb), (url), (main):
	* examples/example-5.svg:
	Add SVG fragment example.

2008-11-26  Robert Staudinger  <robsta@gnome.org>

	* TODO:
	* ccss-cairo/ccss-image.c (load_svg):
	* configure.in:
	* examples/Makefile.am:
	* libccss-cairo-1.pc.in:
	Enable use of SVG fragments.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-property-generic.c (property_new): set property class correctly.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (background_factory):
	* ccss/ccss.h:
	Revisit TODOs.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-background-parser.c (bg_position_parse),
	(bg_repeat_parse):
	* ccss-cairo/ccss-border-parser.c (border_color_factory),
	(border_style_factory), (border_width_factory),
	(border_factory_impl), (border_radius_new),
	(border_radius_factory), (border_style_new), (border_width_new):
	* ccss-cairo/ccss-border.c (get_line_draw_func):
	* ccss-cairo/ccss-cairo-style.c:
	* ccss-cairo/ccss-color.c (ccss_color_parse):
	* ccss-cairo/ccss-image.c (ccss_image_parse):
	* ccss-doc/tmpl/property.sgml:
	* ccss/ccss-property.c (ccss_property_init),
	(ccss_property_parse_state):
	* ccss/ccss-property.h:
	Naming consistency: s,CCSS_PROPERTY_STATE_UNSET,CCSS_PROPERTY_STATE_INVALID.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-doc/tmpl/function.sgml:
	* ccss/ccss-function.c (ccss_function_invoke):
	* ccss/ccss-function.h:
	* examples/example-3.c (url):
	Provide user-data to function handlers.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-node-priv.h:
	* ccss/ccss-node.c:
	* ccss/ccss-node.h:
	* ccss/ccss-selector.c:
	Split out private node interface.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-border-image-parser.c (border_image_convert):
	* ccss-cairo/ccss-cairo-style.c (gather_outline),
	(gather_background), (ccss_cairo_style_draw_outline),
	(ccss_cairo_style_draw_rectangle),
	(ccss_cairo_style_draw_rectangle_with_gap):
	Fix warnings.

	* ccss/ccss-property-generic.c (property_free): free string payload.

	* ccss/ccss.sym: export dump functions.

	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (main):
	* examples/example-4.c (main):
	Correctly shutdown ccss-cairo.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-function.h:
	* ccss/ccss-property-generic.c:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-selector.c (ccss_selector_copy):
	* ccss/ccss.c:
	Fix warnings.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* ccss-clutter/Makefile.am:
	* ccss-clutter/ccss-clutter.c:
	* ccss-clutter/ccss-clutter.h:
	* ccss-clutter/example-1.c:
	* ccss-clutter/example-1.css:
	* ccss-clutter/example-2.c:
	* ccss-clutter/example-2.css:
	* ccss-clutter/foo.svg:
	* configure.in:
	* examples/Makefile.am:
	* examples/example-1.c:
	* examples/example-2.c:
	* examples/example-3.c:
	* examples/example-4.c:
	Remove stale clutter examples, fix examples build.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo-doc/ccss-cairo-docs.sgml:
	* ccss-cairo-doc/ccss-cairo-sections.txt:
	* ccss-cairo-doc/tmpl/ccss-cairo-unused.sgml:
	* ccss-cairo-doc/tmpl/ccss.sgml:
	* ccss-cairo-doc/tmpl/ccss_cairo.sgml:
	* ccss-cairo-doc/tmpl/style.sgml:
	* ccss-cairo/ccss-cairo-style.c (ccss_cairo_style_draw_line),
	(ccss_cairo_style_draw_outline), (ccss_cairo_style_draw_rectangle),
	(ccss_cairo_style_draw_rectangle_with_gap):
	* ccss-cairo/ccss-cairo-style.h:
	* ccss-cairo/ccss-cairo.sym:
	* ccss-clutter/ccss-clutter.c (ccss_clutter_paint):
	* ccss-clutter/example-1.c (paint_css):
	* ccss-doc/ccss-docs.sgml:
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/ccss-unused.sgml:
	* ccss-doc/tmpl/ccss.sgml:
	* ccss-doc/tmpl/ccss_gtk_style_functions.sgml:
	* examples/example-1.c (expose_cb):
	* examples/example-2.c (expose_cb):
	* examples/example-3.c (expose_cb):
	Finish doc split-out, consistent API naming convention.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo-doc/tmpl/ccss_cairo.sgml: add doc template.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* ccss-cairo-doc/Makefile.am:
	* ccss-cairo-doc/ccss-cairo-docs.sgml:
	* ccss-cairo-doc/ccss-cairo-sections.txt:
	* ccss-cairo-doc/version.xml.in:
	* configure.in:
	Add doc skeleton for ccss-cairo.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-doc/Makefile.am:
	* ccss-doc/ccss-docs.sgml:
	* ccss-doc/ccss-sections.txt:
	* ccss-doc/tmpl/block.sgml:
	* ccss-doc/tmpl/ccss-unused.sgml:
	* ccss-doc/tmpl/ccss.sgml:
	* ccss-doc/tmpl/ccss_gtk_style_functions.sgml:
	* ccss-doc/tmpl/function.sgml:
	* ccss-doc/tmpl/node.sgml:
	* ccss-doc/tmpl/property.sgml:
	* ccss-doc/tmpl/style.sgml:
	* ccss-doc/tmpl/stylesheet.sgml:
	* ccss-doc/version.xml.in:
	* doc/Makefile.am:
	* doc/ccss-docs.sgml:
	* doc/ccss-sections.txt:
	* doc/tmpl/block.sgml:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/ccss.sgml:
	* doc/tmpl/ccss_gtk_style_functions.sgml:
	* doc/tmpl/function.sgml:
	* doc/tmpl/node.sgml:
	* doc/tmpl/property.sgml:
	* doc/tmpl/style.sgml:
	* doc/tmpl/stylesheet.sgml:
	* doc/version.xml.in:
	Prepare for documentation ccss/ccss-caior split-up.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/ccss-image.c (load_image): always require an image uri
	  rather than a path.

2008-11-25  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am: fix ccss-clutter pkg-config file installation.

	* ccss/ccss.sym: export `ccss_style_foreach'.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss-cairo/Makefile.am: link with correct version info.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/style.sgml:
	* libccss-1.pc.in:
	* libccss-cairo-1.pc.in:
	Correctly build the standalone libccss-cairo.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* ccss-cairo/Makefile.am:
	* ccss-cairo/ccss-background-parser.c (bg_attachment_parse),
	(bg_image_parse), (bg_position_parse), (bg_repeat_parse),
	(bg_size_parse), (background_factory), (background_attachment_new),
	(background_attachment_convert), (background_image_new),
	(background_image_convert), (background_position_new),
	(background_position_convert), (background_repeat_new),
	(background_repeat_convert), (background_size_new),
	(background_size_convert), (peek_property_class),
	(ccss_background_get_ptable):
	* ccss-cairo/ccss-background-parser.h:
	* ccss-cairo/ccss-background.c (create_pattern), (repeat),
	(repeat_x), (repeat_y), (no_repeat), (ccss_background_fill):
	* ccss-cairo/ccss-background.h:
	* ccss-cairo/ccss-border-image-parser.c (parse_tiling),
	(border_image_new), (border_image_convert), (peek_property_class),
	(ccss_border_image_get_ptable):
	* ccss-cairo/ccss-border-image-parser.h:
	* ccss-cairo/ccss-border-image.c (create_tile), (create_border),
	(create_middle), (paint), (ccss_border_image_draw):
	* ccss-cairo/ccss-border-image.h:
	* ccss-cairo/ccss-border-parser.c (match_style), (lookup_style),
	(parse_width), (parse_style), (parse_radius),
	(border_color_factory), (border_style_factory),
	(border_width_factory), (border_factory_impl), (border_factory),
	(border_left_factory), (border_top_factory),
	(border_right_factory), (border_bottom_factory),
	(border_radius_new), (border_radius_factory),
	(border_radius_convert), (border_style_new),
	(border_style_convert), (border_width_new), (border_width_convert),
	(peek_property_class), (ccss_border_get_ptable):
	* ccss-cairo/ccss-border-parser.h:
	* ccss-cairo/ccss-border.c (_pi), (line), (draw_none_line),
	(draw_dotted_line), (draw_dashed_line), (draw_solid_line),
	(get_line_draw_func), (join), (draw_none_join), (draw_solid_join),
	(get_join_draw_func), (ccss_border_clamp_radii), (border),
	(ccss_border_path), (ccss_border_draw):
	* ccss-cairo/ccss-border.h:
	* ccss-cairo/ccss-cairo-property.c
	(ccss_property_background_attachment),
	(ccss_property_background_color), (ccss_property_background_image),
	(ccss_property_background_position),
	(ccss_property_background_repeat), (ccss_property_background_size),
	(ccss_property_border_color), (ccss_property_border_style),
	(ccss_property_border_width), (ccss_property_border_bottom_color),
	(ccss_property_border_bottom_style),
	(ccss_property_border_bottom_width),
	(ccss_property_border_left_color),
	(ccss_property_border_left_style),
	(ccss_property_border_left_width),
	(ccss_property_border_right_color),
	(ccss_property_border_right_style),
	(ccss_property_border_right_width),
	(ccss_property_border_top_color), (ccss_property_border_top_style),
	(ccss_property_border_top_width), (ccss_property_border_radius),
	(ccss_property_border_top_left_radius),
	(ccss_property_border_top_right_radius),
	(ccss_property_border_bottom_right_radius),
	(ccss_property_border_bottom_left_radius), (ccss_property_color),
	(ccss_property_border_image):
	* ccss-cairo/ccss-cairo-property.h:
	* ccss-cairo/ccss-cairo-style-priv.h:
	* ccss-cairo/ccss-cairo-style.c (ccss_style_subsystem_init),
	(ccss_style_subsystem_shutdown), (lookup_property_r),
	(ccss_style_draw_line), (gather_stroke), (gather_join),
	(ccss_style_gather_outline), (ccss_style_gather_background),
	(ccss_style_draw_outline), (ccss_style_draw_rectangle),
	(ccss_style_draw_gap):
	* ccss-cairo/ccss-cairo-style.h:
	* ccss-cairo/ccss-cairo.c (ccss_cairo_init), (ccss_cairo_shutdown):
	* ccss-cairo/ccss-cairo.h:
	* ccss-cairo/ccss-cairo.sym:
	* ccss-cairo/ccss-color.c (parse_name), (hex), (parse_hex),
	(ccss_color_parse), (ccss_color_new), (ccss_color_free),
	(ccss_color_convert), (peek_property_class),
	(ccss_color_get_ptable):
	* ccss-cairo/ccss-color.h:
	* ccss-cairo/ccss-image.c (ccss_image_discard), (load_svg),
	(load_png), (load_image), (ccss_image_parse):
	* ccss-cairo/ccss-image.h:
	* ccss-cairo/ccss-position.c (ccss_position_parse),
	(ccss_position_get_pos), (ccss_position_get_size), (contain),
	(cover), (ccss_position_get_hsize), (ccss_position_get_vsize),
	(ccss_position_serialize):
	* ccss-cairo/ccss-position.h:
	* ccss-clutter/Makefile.am:
	* ccss-clutter/ccss-clutter.h:
	* ccss-clutter/example-1.c (main):
	* ccss-gtk/Makefile.am:
	* ccss-gtk/ccss-gtk-style.c:
	* ccss-gtk/ccss-gtk-style.h:
	* ccss-gtk/ccss-gtk.h:
	* ccss-gtk/ccss-gtk.sym.in:
	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c:
	* ccss/ccss-background-parser.h:
	* ccss/ccss-background.c:
	* ccss/ccss-background.h:
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c:
	* ccss/ccss-border-image-parser.c:
	* ccss/ccss-border-image-parser.h:
	* ccss/ccss-border-image.c:
	* ccss/ccss-border-image.h:
	* ccss/ccss-border-parser.c:
	* ccss/ccss-border-parser.h:
	* ccss/ccss-border.c:
	* ccss/ccss-border.h:
	* ccss/ccss-cairo-property.c:
	* ccss/ccss-cairo-property.h:
	* ccss/ccss-color.c:
	* ccss/ccss-color.h:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.h:
	* ccss/ccss-image.c:
	* ccss/ccss-image.h:
	* ccss/ccss-parser.c:
	* ccss/ccss-position.c:
	* ccss/ccss-position.h:
	* ccss/ccss-priv.h:
	* ccss/ccss-property-priv.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c (ccss_style_get_double),
	(ccss_style_get_string):
	* ccss/ccss-style.h:
	* ccss/ccss.c (ccss_init), (ccss_shutdown):
	* ccss/ccss.sym:
	* configure.in:
	* libccss-gtk-1.pc.in:
	Split out the cairo-dependent code.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c:
	* ccss/ccss-background-parser.h:
	* ccss/ccss-background.c:
	* ccss/ccss-background.h:
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c:
	* ccss/ccss-border-image-parser.c:
	* ccss/ccss-border-image-parser.h:
	* ccss/ccss-border-image.c:
	* ccss/ccss-border-image.h:
	* ccss/ccss-border-parser.c:
	* ccss/ccss-border-parser.h:
	* ccss/ccss-border.c:
	* ccss/ccss-border.h:
	* ccss/ccss-cairo-property.c:
	* ccss/ccss-cairo-property.h:
	* ccss/ccss-color.c:
	* ccss/ccss-features.h.in:
	* ccss/ccss-function.c:
	* ccss/ccss-image.c:
	* ccss/ccss-image.h:
	* ccss/ccss-node.c:
	* ccss/ccss-node.h:
	* ccss/ccss-parser.c:
	* ccss/ccss-parser.h:
	* ccss/ccss-position.c:
	* ccss/ccss-position.h:
	* ccss/ccss-property-generic.c:
	* ccss/ccss-property-generic.h:
	* ccss/ccss-property-priv.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c:
	* ccss/ccss-selector.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c:
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.c:
	* ccss/ccss.h:
	* configure.in:
	No more need to install ccss-features.h now that the library is split up.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* examples/example-4.c (expose_cb): improve example.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* examples/example-4.c (font_family_new), (font_family_free),
	(font_family_convert), (peek_property_class), (expose_cb), (main):
	Illustrate use of custom properties.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-node.h:
	* ccss/ccss-property.c (ccss_property_init):
	* ccss/ccss-property.h:
	* ccss/ccss.sym:
	* doc/ccss-sections.txt:
	* doc/tmpl/property.sgml:
	* examples/Makefile.am:
	API for initialising custom properties.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background-parser.c:
	* ccss/ccss-border-parser.c (border_factory_impl):
	* ccss/ccss-color.c (ccss_color_parse), (ccss_color_new),
	(peek_property_class):
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss.c (ccss_cairo_init):
	* ccss/ccss.sym:
	* examples/example-2.c (main):
	* examples/example-3.c (main):
	Fix creation of color properties.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-property-generic.c:
	* ccss/ccss-property-generic.h:
	Structure can be private to the .c file.

	* ccss/ccss.c (ccss_init), (ccss_shutdown), (ccss_cairo_init):
	Correctly initialise ccss so generic properties work.

	* doc/tmpl/block.sgml:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/property.sgml:
	Doc tweaks.

	* examples/example-1.c (main):
	Initialise ccss-cairo.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c:
	* doc/ccss-docs.sgml:
	* doc/ccss-sections.txt:
	* doc/tmpl/block.sgml:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/node.sgml:
	Update docs.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c (background_factory):
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c (ccss_block_add_property), (ccss_block_dump):
	* ccss/ccss-block.h:
	* ccss/ccss-border-parser.c:
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss-property-priv.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c (ccss_style_lookup_property),
	(lookup_property_r), (ccss_style_get_double),
	(ccss_style_get_string), (ccss_style_dump):
	* ccss/ccss-stylesheet.c (inherit_container_style):
	* ccss/ccss.c (ccss_init), (ccss_shutdown):
	* ccss/ccss.sym:
	* configure.in:
	* doc/tmpl/function.sgml:
	* doc/tmpl/property.sgml:
	Clean up property handling.

2008-11-24  Robert Staudinger  <robsta@gnome.org>

	* TODO:
	* ccss-clutter/example-1.c (main):
	* ccss-clutter/example-2.c (url), (main):
	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c (bg_attachment_parse),
	(bg_image_parse), (bg_position_parse), (bg_repeat_parse),
	(bg_size_parse), (background_factory), (background_attachment_new),
	(background_attachment_convert), (background_image_new),
	(background_image_convert), (background_position_new),
	(background_position_convert), (background_repeat_new),
	(background_repeat_convert), (background_size_new),
	(background_size_convert), (peek_property_class),
	(ccss_background_get_ptable):
	* ccss/ccss-background-parser.h:
	* ccss/ccss-background.c (ccss_background_fill):
	* ccss/ccss-background.h:
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c (ccss_block_insert_property):
	* ccss/ccss-border-image-parser.c (border_image_new),
	(border_image_convert), (peek_property_class),
	(ccss_border_image_get_ptable):
	* ccss/ccss-border-image-parser.h:
	* ccss/ccss-border-image.h:
	* ccss/ccss-border-parser.c (lookup_style), (parse_width),
	(parse_style), (parse_radius), (border_color_factory),
	(border_style_factory), (border_width_factory),
	(border_factory_impl), (border_factory), (border_left_factory),
	(border_top_factory), (border_right_factory),
	(border_bottom_factory), (border_radius_new),
	(border_radius_factory), (border_radius_convert),
	(border_style_new), (border_style_convert), (border_width_new),
	(border_width_convert), (peek_property_class),
	(ccss_border_get_ptable):
	* ccss/ccss-border-parser.h:
	* ccss/ccss-border.c (get_line_draw_func), (border):
	* ccss/ccss-border.h:
	* ccss/ccss-color.c (parse), (ccss_color_new), (ccss_color_free),
	(ccss_color_convert), (ccss_color_parse), (ccss_color_get_ptable):
	* ccss/ccss-color.h:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c (ccss_function_subsystem_add_functions),
	(ccss_function_subsystem_shutdown), (ccss_function_invoke):
	* ccss/ccss-function.h:
	* ccss/ccss-image.c (ccss_image_parse):
	* ccss/ccss-image.h:
	* ccss/ccss-parser.c (ccss_parser_subsystem_add_properties),
	(ccss_parser_subsystem_shutdown), (property_cb):
	* ccss/ccss-parser.h:
	* ccss/ccss-property-generic.c (property_new), (property_convert),
	(peek_property_class), (ccss_property_generic_get_ptable):
	* ccss/ccss-property-generic.h:
	* ccss/ccss-property.h:
	* ccss/ccss-style.c (ccss_style_subsystem_init):
	* ccss/ccss.c (ccss_init), (ccss_add_properties),
	(ccss_add_functions), (ccss_shutdown), (ccss_cairo_init),
	(ccss_cairo_shutdown):
	* ccss/ccss.h:
	* ccss/ccss.sym:
	* doc/ccss-sections.txt:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/ccss.sgml:
	* doc/tmpl/node.sgml:
	* doc/tmpl/property.sgml:
	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (url), (main):
	Use dynamically registered property handlers.

2008-11-19  Robert Staudinger  <robsta@gnome.org>

	* ccss-clutter/example-1.c (main):
	* ccss-clutter/example-2.c (main):
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c (ccss_function_subsystem_init):
	* ccss/ccss-parser.c (lookup_property_impl),
	(ccss_parser_subsystem_init), (property_cb):
	* ccss/ccss-parser.h:
	* ccss/ccss.c (ccss_init):
	* ccss/ccss.h:
	* doc/tmpl/ccss.sgml:
	* doc/tmpl/node.sgml:
	* examples/example-1.c (main):
	* examples/example-2.c (main):
	* examples/example-3.c (main):
	Some more work on custom properties.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-style.c (ccss_style_foreach):
	* ccss/ccss-style.h:
	* doc/ccss-sections.txt:
	* doc/tmpl/style.sgml:
	API for iterating properties of a `ccss_style_t' object.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background.h:
	* ccss/ccss-border.h:
	* ccss/ccss-color.h:
	* ccss/ccss-image.c:
	* ccss/ccss-image.h:
	* ccss/ccss-selector.c (ccss_selector_apply):
	Clean up of debugging code.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* doc/ccss-docs.sgml:
	* doc/ccss-sections.txt:
	* doc/tmpl/property.sgml:
	Update docs.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c (bg_attachment_parse),
	(bg_image_parse), (bg_position_parse), (bg_repeat_parse),
	(bg_size_parse):
	* ccss/ccss-background.c (ccss_background_fill):
	* ccss/ccss-background.h:
	* ccss/ccss-block.c:
	* ccss/ccss-border-image-parser.c (ccss_block_parse_border_image):
	* ccss/ccss-border-image.h:
	* ccss/ccss-border-parser.c (parse_width), (parse_style),
	(parse_color), (parse_radius), (parse_stroke_property),
	(ccss_block_parse_border):
	* ccss/ccss-border.c (get_line_draw_func), (border):
	* ccss/ccss-border.h:
	* ccss/ccss-color.c (ccss_color_init), (parse), (ccss_color_parse):
	* ccss/ccss-color.h:
	* ccss/ccss-image.c (ccss_image_parse):
	* ccss/ccss-image.h:
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss-property-priv.h:
	* ccss/ccss-property.c (ccss_property_parse_state):
	* ccss/ccss-property.h:
	* ccss/ccss-style.c:
	* ccss/ccss-stylesheet.c (inherit_container_style),
	(ccss_stylesheet_query):
	* ccss/ccss.c:
	* ccss/ccss.h:
	Split out ccss-property-priv.h, parts property handling need to be public for custom properties.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-property.c (ccss_property_subsystem_init),
	(ccss_property_subsystem_shutdown):
	* ccss/ccss-property.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c (ccss_style_subsystem_init),
	(ccss_style_subsystem_shutdown):
	* ccss/ccss.c (ccss_init), (ccss_shutdown):
	Better internal naming consistency.

2008-11-18  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-block.c:
	* ccss/ccss-cairo-property.c (ccss_property_background_attachment),
	(ccss_property_background_color), (ccss_property_background_image),
	(ccss_property_background_position),
	(ccss_property_background_repeat), (ccss_property_background_size),
	(ccss_property_border_color), (ccss_property_border_style),
	(ccss_property_border_width), (ccss_property_border_bottom_color),
	(ccss_property_border_bottom_style),
	(ccss_property_border_bottom_width),
	(ccss_property_border_left_color),
	(ccss_property_border_left_style),
	(ccss_property_border_left_width),
	(ccss_property_border_right_color),
	(ccss_property_border_right_style),
	(ccss_property_border_right_width),
	(ccss_property_border_top_color), (ccss_property_border_top_style),
	(ccss_property_border_top_width), (ccss_property_border_radius),
	(ccss_property_border_top_left_radius),
	(ccss_property_border_top_right_radius),
	(ccss_property_border_bottom_right_radius),
	(ccss_property_border_bottom_left_radius), (ccss_property_color),
	(ccss_property_border_image):
	* ccss/ccss-cairo-property.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-style.c:
	Split out ccss-cairo specific properties into their own file.

2008-11-17  Robert Staudinger  <robsta@gnome.org>

	* ccss-clutter/example-2.c (url):
	* ccss/ccss-background-parser.c (bg_image_parse),
	(ccss_block_parse_background):
	* ccss/ccss-border-image-parser.c (ccss_block_parse_border_image):
	* ccss/ccss-border-parser.c (parse_color), (parse_stroke_property),
	(ccss_block_parse_border):
	* ccss/ccss-color.c (parse), (ccss_color_parse):
	* ccss/ccss-color.h:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c (ccss_function_invoke):
	* ccss/ccss-function.h:
	* ccss/ccss-image.c (ccss_image_parse):
	* ccss/ccss-image.h:
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss.h:
	* doc/tmpl/function.sgml:
	* examples/example-3.c (url):
	Also pass the `block' instance down to function implementations.

2008-11-17  Robert Staudinger  <robsta@gnome.org>

	* ccss-clutter/example-2.c (url):
	* ccss/ccss-background-parser.c (bg_image_parse),
	(ccss_block_parse_background):
	* ccss/ccss-block.c (ccss_block_add_property):
	* ccss/ccss-block.h:
	* ccss/ccss-border-image-parser.c (ccss_block_parse_border_image):
	* ccss/ccss-border-parser.c (parse_color), (parse_stroke_property),
	(ccss_block_parse_border):
	* ccss/ccss-color.c (parse), (ccss_color_parse):
	* ccss/ccss-color.h:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c (ccss_function_invoke):
	* ccss/ccss-function.h:
	* ccss/ccss-image.c (ccss_image_parse):
	* ccss/ccss-image.h:
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss-style.c (ccss_style_get_property):
	* ccss/ccss-style.h:
	* ccss/ccss.sym:
	* configure.in:
	* doc/ccss-sections.txt:
	* doc/tmpl/function.sgml:
	* doc/tmpl/style.sgml:
	* examples/example-3.c (url):
	Extend function interface to support custom properties.

2008-11-17  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c:
	* ccss/ccss-block-priv.h:
	* ccss/ccss-block.c:
	* ccss/ccss-block.h:
	* ccss/ccss-border-image-parser.c:
	* ccss/ccss-border-parser.c:
	* ccss/ccss-border-parser.h:
	* ccss/ccss-parser.c:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector.c:
	* ccss/ccss-style.c:
	* ccss/ccss-stylesheet.c:
	Split out public ccss-block.h for custom property API.

2008-11-17  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-parser.c (property_cb), (ccss_parser_parse_file),
	(ccss_parser_parse_buffer), (ccss_parser_parse_inline):
	* ccss/ccss-parser.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_new),
	(ccss_stylesheet_new_from_buffer), (ccss_stylesheet_new_from_file),
	(ccss_stylesheet_add_from_file), (ccss_stylesheet_free),
	(query_node), (ccss_stylesheet_invalidate_node):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym:
	* doc/ccss-sections.txt:
	* doc/tmpl/stylesheet.sgml:
	New API `ccss_stylesheet_invalidate_node' to invalidate inline CSS when using dynamically created document nodes.

2008-11-13  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border-image-parser.c (ccss_block_parse_border_image):
	* ccss/ccss-border-image.c (create_tile), (create_border),
	(create_middle), (paint), (ccss_border_image_draw):
	* ccss/ccss-border-parser.c (ccss_block_parse_border):
	* ccss/ccss-position.c (ccss_position_serialize):
	* ccss/ccss-position.h:
	* ccss/ccss-style.c (convert_border_image), (ccss_style_init),
	(ccss_style_draw_rectangle):
	* examples/example-3.c (url), (main):
	Fix `border-image' tile positioning and -scaling.

2008-11-13  Robert Staudinger  <robsta@gnome.org>

	* examples/Makefile.am:
	* examples/example-3.c (expose_cb), (main):
	* examples/example-3.png:
	Example demonstrating `border-image'.

2008-11-13  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border-image-parser.c (ccss_block_parse_border_image):
	* ccss/ccss-border-image.c (create_tile), (create_border),
	(create_middle), (paint), (ccss_border_image_draw):
	* ccss/ccss-border-image.h:
	* ccss/ccss-position.c (ccss_position_get_size):
	* ccss/ccss-position.h:
	Basic `border-image' drawing code.

2008-11-12  Robert Staudinger  <robsta@gnome.org>

	reported by: Thomas Wood <thomas@linux.intel.com>

	* configure.in: link ccss against ccss-cairo libs until cairo split-out is complete.

2008-11-12  Robert Staudinger  <robsta@gnome.org>

	* configure.in: try to use librsvg unless explicitly disabled.

2008-11-12  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block.c (ccss_block_new_border_image),
	(ccss_block_get_border_image):
	* ccss/ccss-block.h:
	* ccss/ccss-border-image-parser.c (parse_tiling),
	(ccss_block_parse_border_image):
	* ccss/ccss-border-image.h:
	* ccss/ccss-property.c (ccss_property_border_image):
	* ccss/ccss-property.h:
	Parsing of `border-image' properties.

2008-11-11  Thomas Wood <thomas@linux.intel.com>

	* ccss/Makefile.am:
	* ccss/ccss-stylesheet.h:
	Fix public header separation and installation.

2008-11-11  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-border-image-parser.c:
	* ccss/ccss-border-image-parser.h:
	More `border-image' skeleton code.

2008-11-11  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-border-image.c:
	* ccss/ccss-border-image.h:
	Add `border-image' skeleton.

2008-11-11  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-stylesheet.c (ccss_stylesheet_add_from_file),
	(query_node), (query_container_r), (ccss_stylesheet_query):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym:
	* doc/ccss-sections.txt:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/stylesheet.sgml:
	Better naming consistency.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss.h: small cleanup.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* TODO:
	* ccss-clutter/Makefile.am:
	* ccss-clutter/ccss-clutter.c (ccss_clutter_paint):
	* ccss-clutter/ccss-clutter.h:
	* ccss-clutter/example-2.c (create_actor):
	* ccss-gtk/Makefile.am:
	* ccss/Makefile.am:
	* configure.in:
	Fix linking.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* cccss/Makefile.am:
	* cccss/cccss.c:
	* cccss/cccss.h:
	* cccss/example-1.c:
	* cccss/example-1.css:
	* cccss/example-2.c:
	* cccss/example-2.css:
	* cccss/foo.svg:
	* ccss-clutter/Makefile.am:
	* ccss-clutter/ccss-clutter.c (get_type), (get_id),
	(ccss_clutter_paint):
	* ccss-clutter/ccss-clutter.h:
	* ccss-clutter/example-1.c (paint_css), (main):
	* ccss-clutter/example-1.css:
	* ccss-clutter/example-2.c (url), (create_actor), (main):
	* ccss-clutter/example-2.css:
	* ccss-clutter/foo.svg:
	Use new naming scheme for the experimental clutter code.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* ccss-gtk/Makefile.am:
	* ccss-gtk/ccss-gtk.sym:
	* ccss-gtk/ccss-gtk.sym.in:
	Also export the base libraries' symbols.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am:
	* cccss/Makefile.am:
	* ccss-gtk/Makefile.am:
	* ccss-gtk/ccss-gtk-style.c (ccss_style_draw_gap),
	(ccss_style_draw_polygon):
	* ccss-gtk/ccss-gtk-style.h:
	* ccss-gtk/ccss-gtk.h:
	* ccss-gtk/ccss-gtk.sym:
	* ccss/Makefile.am:
	* ccss/ccss-gtk-style.c:
	* ccss/ccss-gtk-style.h:
	* ccss/ccss-gtk.sym.in:
	* ccss/ccss.sym:
	* ccss/ccss.sym.in:
	* configure.in:
	* examples/Makefile.am:
	* libccss-gtk-1.pc.in:
	Library split-up, step 2: split out gtk dependent code into separate library.

2008-11-07  Robert Staudinger  <robsta@gnome.org>

	* configure.in: library split-up, step 1.

2008-11-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background.c (ccss_background_fill): gracefully handle unset background image coming from built-ins.

2008-11-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background.c (create_pattern), (repeat), (repeat_x),
	(repeat_y), (ccss_background_fill):
	More defensive coding.

2008-11-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background-parser.c (bg_position_parse):
	* ccss/ccss-background.c (ccss_background_fill):
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss-property.c (ccss_property_parse_spec):
	* ccss/ccss-property.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_query):
	Review FIXME tags related to property inheritance.

2008-11-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-stylesheet.c (query_type_r), (query_shallow),
	(inherit_container_style), (query_container_r),
	(ccss_stylesheet_query):
	Basic support for inheriting style from the container.

2008-11-05  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-selector-group.c (traverse_merge),
	(ccss_selector_group_merge_as_base):
	* ccss/ccss-selector-group.h:
	* ccss/ccss-stylesheet.c (fix_dangling_selectors),
	(ccss_stylesheet_query):
	* doc/tmpl/function.sgml:
	Remove unused code.

2008-11-04  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-function.h:
	* doc/ccss-docs.sgml:
	* doc/ccss-sections.txt:
	* doc/tmpl/function.sgml:
	* doc/tmpl/selector_group.sgml:
	Update docs.

2008-11-04  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/style.sgml:
	* doc/tmpl/stylesheet.sgml:
	* examples/example-2.c (main):
	Cleanup after API change.

2008-11-04  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-block.h:
	* ccss/ccss-color.c:
	* ccss/ccss-function-priv.h:
	* ccss/ccss-function.c:
	* ccss/ccss-function.h:
	* ccss/ccss-image.c:
	* ccss/ccss-parser.c:
	* ccss/ccss-parser.h:
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c:
	* ccss/ccss-selector.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c:
	* ccss/ccss.c:
	Do not expose libcroco dependency in headers, also gets rid of implicit glib header dependency.

2008-11-03  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-background-parser.c:
	* ccss/ccss-background-parser.h:
	* ccss/ccss-background.c (create_pattern), (ccss_background_fill):
	* ccss/ccss-background.h:
	* ccss/ccss-block.c:
	* ccss/ccss-block.h:
	* ccss/ccss-border-parser.c:
	* ccss/ccss-border-parser.h:
	* ccss/ccss-border.c:
	* ccss/ccss-border.h:
	* ccss/ccss-color.c:
	* ccss/ccss-color.h:
	* ccss/ccss-function.c:
	* ccss/ccss-function.h:
	* ccss/ccss-gtk-style.h:
	* ccss/ccss-image.c (load_svg), (load_png), (load_image),
	(ccss_image_dump):
	* ccss/ccss-image.h:
	* ccss/ccss-macros.h:
	* ccss/ccss-node.c:
	* ccss/ccss-node.h:
	* ccss/ccss-parser.c:
	* ccss/ccss-parser.h:
	* ccss/ccss-position.c:
	* ccss/ccss-position.h:
	* ccss/ccss-property.c:
	* ccss/ccss-property.h:
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c:
	* ccss/ccss-selector.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_foreach):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.h:
	Do not expose glib dependency in any headers.

2008-10-31  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember inline styling memory management facts.

	* ccss/ccss-parser.c (walk_selector): associate the block to the
	  selector, so the styling can be applied.

	* ccss/ccss-stylesheet.c (ccss_stylesheet_query): do not free the 
	  block(s), they need to live as long as the style.

	* examples/Makefile.am:
	* examples/example-2.c (get_type), (get_instance), (get_style),
	(expose_cb), (main):
	New example illustrating the use of inline styling.

2008-10-31  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* TODO:
	Update.

	* ccss/ccss-parser.c (walk_selector), (start_selector_cb),
	(property_cb), (end_selector_cb), (ccss_parser_parse_file),
	(ccss_parser_parse_buffer), (ccss_parser_parse_inline):
	* ccss/ccss-parser.h:
	* ccss/ccss-selector.c (ccss_instance_selector_new),
	(instance_selector_dup), (instance_selector_free),
	(instance_selector_dump), (ccss_selector_copy),
	(ccss_selector_free), (ccss_selector_is_type),
	(ccss_selector_is_class), (ccss_selector_is_id),
	(ccss_selector_get_key), (ccss_selector_query),
	(ccss_selector_dump):
	* ccss/ccss-selector.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_query):
	Basic inline-styling support.

2008-10-30  Robert Staudinger  <robsta@gnome.org>

	* TODO:
	* ccss/ccss-node.c (get_instance), (get_style):
	* ccss/ccss-node.h:
	* configure.in:
	* doc/ccss-sections.txt:
	* doc/tmpl/node.sgml:
	Work on per-node inline CSS styling.

2008-10-30  Robert Staudinger  <robsta@gnome.org>

	* TODO:
	* cccss/example-1.c (paint_css):
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c (ccss_selector_group_apply_type):
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c (ccss_selector_apply):
	* ccss/ccss-stylesheet.c (ccss_stylesheet_query_type):
	* ccss/ccss-stylesheet.h:
	* doc/tmpl/stylesheet.sgml:
	* examples/example-1.c (main):
	Simplification of the type-based one-shot query API.

2008-10-30  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c (traverse_query), (traverse_apply),
	(ccss_selector_group_apply):
	* ccss/ccss-selector.c (match_antecessor_r), (ccss_selector_query),
	(ccss_selector_apply):
	* ccss/ccss-selector.h:
	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_query):
	* ccss/ccss.sym.in:
	* doc/tmpl/ccss-unused.sgml:
	* doc/tmpl/selector_group.sgml:
	* doc/tmpl/stylesheet.sgml:
	Get rid of gce-specifiy viewport API.

2008-10-30  Robert Staudinger  <robsta@gnome.org>

	* cccss/example-1.c (paint_css):
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	Review public API with regard to selector groups.

2008-10-30  Robert Staudinger  <robsta@gnome.org>

	* cccss/cccss.c (cccss_paint): fix example.

	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c (compare), (ccss_selector_group_new),
	(ccss_selector_group_free), (ccss_selector_group_add_selector),
	(ccss_selector_group_merge), (ccss_selector_group_merge_base),
	(traverse_query), (ccss_selector_group_query),
	(ccss_selector_group_apply), (ccss_selector_group_apply_type),
	(ccss_selector_group_dump):
	* ccss/ccss-selector-group.h:
	* ccss/ccss-selector.c (match_antecessor_r), (ccss_selector_query):
	* ccss/ccss-selector.h:
	* ccss/ccss-stylesheet.c (collect_type_r), (ccss_stylesheet_query):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	Fix order in which complex wildcard-based selectors are applied and streamline public API.

2008-10-29  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-color.c (parse):
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-stylesheet.c:
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	Get rid of gce-specifiy API.

2008-10-29  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-parser.c (calculate_importance),
	(walk_additional_selector), (walk_simple_selector_r),
	(walk_selector_r), (start_selector_cb), (property_cb),
	(end_selector_cb), (ccss_parser_parse_file),
	(ccss_parser_parse_buffer):
	* ccss/ccss-selector.c (selector_sync),
	(ccss_universal_selector_new), (ccss_type_selector_new),
	(ccss_base_type_selector_new), (ccss_class_selector_new),
	(ccss_id_selector_new), (ccss_attribute_selector_new),
	(ccss_pseudo_class_selector_new), (ccss_selector_refine),
	(ccss_selector_append_child), (ccss_selector_append_descendant):
	* ccss/ccss-selector.h:
	Basic support for `!important' CSS properties.

2008-10-27  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-parser.c (walk_additional_selector),
	(walk_simple_selector_r), (start_selector_cb), (end_selector_cb),
	(ccss_parser_parse_file), (ccss_parser_parse_buffer):
	* ccss/ccss-parser.h:
	* ccss/ccss-selector-group.c:
	* ccss/ccss-selector.c (selector_sync),
	(ccss_universal_selector_new), (ccss_type_selector_new),
	(ccss_base_type_selector_new), (ccss_class_selector_new),
	(ccss_id_selector_new), (ccss_attribute_selector_new),
	(ccss_pseudo_class_selector_new), (ccss_selector_refine),
	(ccss_selector_append_child), (ccss_selector_append_descendant),
	(ccss_selector_get_importance), (ccss_selector_get_precedence),
	(ccss_selector_get_specificity):
	* ccss/ccss-selector.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_new_from_buffer),
	(ccss_stylesheet_new_from_file), (ccss_stylesheet_load_from_file):
	* ccss/ccss-stylesheet.h:
	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	* doc/tmpl/stylesheet.sgml:
	Allow for multiple CSS files being loaded with cascading as per CSS specification.

2008-10-22  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background.c:
	* ccss/ccss-selector-group-priv.h:
	* ccss/ccss-selector-group.c (ccss_selector_group_query_collect):
	* ccss/ccss-stylesheet.c (collect_type_r),
	(ccss_stylesheet_query_collect):
	* ccss/ccss-stylesheet.h:
	* doc/tmpl/stylesheet.sgml:
	Better consistency, move all out parameters to the end of parameter list.

2008-10-22  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border.c (draw_none_line), (draw_dotted_line),
	(draw_dashed_line):
	* examples/example-1.c:
	Fix drawing of dotted and dashed lines.

2008-10-22  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-selector-group.c (ccss_selector_group_new),
	(ccss_selector_group_free), (ccss_selector_group_add_selector),
	(ccss_selector_group_merge), (ccss_selector_group_merge_base),
	(ccss_selector_group_query_collect),
	(ccss_selector_group_query_apply), (ccss_selector_group_apply),
	(ccss_selector_group_apply_type), (ccss_selector_group_dump):
	Use GHashTable instead of GTree so it's possible to do queue-based iteration over multiple selector groups.

2008-10-20  Robert Staudinger  <robsta@gnome.org>

	* TODO: update.

	* ccss/ccss-background.h: delete unused prototypes.

2008-10-20  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember how to fix complex universal selectors.

	* ccss/ccss-selector-group.c (traverse_merge), (traverse_query),
	(traverse_match), (traverse_dump), (ccss_selector_group_dump):
	* ccss/ccss-style.c:
	Iterate GSList using `for' loops.

2008-10-17  Robert Staudinger  <robsta@gnome.org>

	* configure.in: post-release version bump.

2008-10-17  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* NEWS:
	* README:
	* TODO:
	* ccss/ccss-style.c:
	* configure.in:
	Prepare 0.1 release.

2008-10-17  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss.sym.in:
	Remove CSS-engine-specific API, now that style property interface is in place.

2008-10-16  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.h:
	* ccss/ccss.c:
	* examples/example-1.c (main):
	Fix warnings.

2008-10-16  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block.c (ccss_block_new_border_color),
	(ccss_block_new_border_style), (ccss_block_new_border_width),
	(ccss_block_new_border_radius), (ccss_block_get_border_color),
	(ccss_block_get_border_style), (ccss_block_get_border_width),
	(ccss_block_get_border_radius), (ccss_block_dump):
	* ccss/ccss-block.h:
	* ccss/ccss-border-parser.c (ccss_block_parse_border):
	* ccss/ccss-property.c (ccss_property_border_color),
	(ccss_property_border_style), (ccss_property_border_width),
	(ccss_property_border_radius):
	* ccss/ccss-property.h:
	* ccss/ccss-style.c (ccss_style_init), (ccss_style_shutdown),
	(lookup_property_r), (ccss_style_get_double),
	(ccss_style_get_string), (ccss_style_draw_line), (gather_stroke),
	(gather_join):
	* examples/example-1.c (main):
	Fallback infrastructure for properties like `border-width', the way things are read from CSS is now preserved internally. This facilitates more useful things with the ccss_style_t property query interface.

2008-10-16  Thomas Wood  <thomas@linux.intel.com>

	* ccss/ccss-style.c (convert_color): leading '#' for color to string conversion.

2008-10-16  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block.c (convert_property), (ccss_block_new_property),
	(ccss_block_get_property):
	* ccss/ccss-block.h:
	* ccss/ccss-parser.c (property_cb):
	* ccss/ccss-property.h:
	* ccss/ccss-style.c (ccss_style_dump):
	Generic properties (opaque to libccss), only types `double', 'identifier', and `string' supported for now.

2008-10-15  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-stylesheet.c (ccss_stylesheet_query_apply): include wildcard styles (report by Thomas Wood  <thomas@linux.intel.com>).

2008-10-15  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background-parser.c (bg_attachment_parse),
	(bg_repeat_parse):
	* ccss/ccss-position.c (ccss_position_parse):
	* ccss/ccss-selector-group.c (traverse_apply):
	Consistent use of case sensitivity, only colors are case-insensitive.

2008-10-15  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-gtk-style.c:
	* ccss/ccss-selector-group.h:
	* ccss/ccss-style-priv.h:
	* ccss/ccss-style.c:
	* ccss/ccss-style.h:
	* ccss/ccss.h:
	* configure.in:
	Cut down number of installed headers after change of internal representation.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/Makefile.am:
	* ccss/ccss-border-parser.c (ccss_border_lookup_name):
	* ccss/ccss-border-parser.h:
	* ccss/ccss-style.c (convert_background_position),
	(convert_background_size), (convert_border_style):
	* configure.in:
	Fix `make distcheck'.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-parser.c (ccss_parser_parse_buffer): also use libcroco workaround.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-property.h:
	* ccss/ccss-selector.c (ccss_selector_append_child),
	(ccss_selector_append_descendant):
	Revisit TODOs for staleness.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background-parser.c (ccss_block_parse_background):
	* ccss/ccss-background.c:
	* ccss/ccss-block.c (ccss_block_dump):
	* ccss/ccss-border.c:
	* ccss/ccss-color.c:
	* ccss/ccss-style.c (ccss_style_dump):
	Reinstate `dump' functions after change of internal representation.

2008-10-14  Thomas Wood  <thomas@linux.intel.com>

	* ccss/ccss-node.h:
	* doc/tmpl/node.sgml:
	Re-arrange ccss-node.h to fix gtk-doc not following forward declerations.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border.h: remove unused field.

2008-10-14  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border.h:
	* ccss/ccss-property.c (ccss_property_init),
	(ccss_property_shutdown),
	(ccss_property_register_conversion_function),
	(ccss_property_convert):
	* ccss/ccss-property.h:
	* ccss/ccss-style.c (convert_background_attachment),
	(convert_background_image), (convert_background_position),
	(convert_background_repeat), (convert_background_size),
	(convert_border_style), (convert_border_width),
	(convert_border_radius), (convert_color), (ccss_style_init),
	(ccss_style_shutdown), (ccss_style_get_double),
	(ccss_style_get_string):
	* ccss/ccss-style.h:
	* ccss/ccss.c (ccss_init), (ccss_shutdown):
	* ccss/ccss.sym.in:
	* doc/ccss-sections.txt:
	* doc/tmpl/style.sgml:
	* examples/example-1.c (main):
	Property-query API for ccss_style_t.

2008-10-13  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-block.c (ccss_block_new):
	* ccss/ccss-block.h:
	* ccss/ccss-property.c (ccss_property_background_attachment),
	(ccss_property_background_color), (ccss_property_background_image),
	(ccss_property_background_position),
	(ccss_property_background_repeat), (ccss_property_background_size),
	(ccss_property_border_bottom_color),
	(ccss_property_border_bottom_style),
	(ccss_property_border_bottom_width),
	(ccss_property_border_left_color),
	(ccss_property_border_left_style),
	(ccss_property_border_left_width),
	(ccss_property_border_right_color),
	(ccss_property_border_right_style),
	(ccss_property_border_right_width),
	(ccss_property_border_top_color), (ccss_property_border_top_style),
	(ccss_property_border_top_width),
	(ccss_property_border_top_left_radius),
	(ccss_property_border_top_right_radius),
	(ccss_property_border_bottom_right_radius),
	(ccss_property_border_bottom_left_radius), (ccss_property_color):
	* ccss/ccss-property.h:
	* ccss/ccss-style.c:
	Move property quarks to property.c/h.

2008-10-09  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-background-parser.c (bg_attachment_parse),
	(bg_image_parse), (bg_position_parse), (bg_repeat_parse),
	(bg_size_parse), (ccss_block_parse_background):
	* ccss/ccss-background-parser.h:
	Fix border-drawing now that they are always set because of the internal representation.

2008-10-09  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-border-parser.c (match_style), (parse_width),
	(parse_style), (parse_color), (parse_radius),
	(parse_stroke_property), (ccss_block_parse_border), (lookup_name):
	* ccss/ccss-border-parser.h:
	Internal property representation as a hash, untested.

2008-10-07 Robert Staudinger  <robsta@gnome.org>

	* TODO: remember error handling.

	* ccss/ccss-block.c (ccss_block_new), (ccss_block_new_background),
	(ccss_block_new_background_attachment),
	(ccss_block_new_background_color),
	(ccss_block_new_background_image),
	(ccss_block_new_background_position),
	(ccss_block_new_background_repeat),
	(ccss_block_new_background_size), (ccss_block_new_border),
	(ccss_block_new_border_color), (ccss_block_new_border_style),
	(ccss_block_new_border_width), (ccss_block_new_border_bottom),
	(ccss_block_new_border_bottom_color),
	(ccss_block_new_border_bottom_style),
	(ccss_block_new_border_bottom_with), (ccss_block_new_border_left),
	(ccss_block_new_border_right), (ccss_block_new_border_top),
	(ccss_block_new_border_radius),
	(ccss_block_new_border_bottom_left_radius),
	(ccss_block_new_border_bottom_right_radius),
	(ccss_block_new_border_top_left_radius),
	(ccss_block_new_border_top_right_radius), (ccss_block_new_color),
	(ccss_block_get_background),
	(ccss_block_get_background_attachment),
	(ccss_block_get_background_color),
	(ccss_block_get_background_image),
	(ccss_block_get_background_position),
	(ccss_block_get_background_repeat),
	(ccss_block_get_background_size), (ccss_block_get_border),
	(ccss_block_get_border_color), (ccss_block_get_border_style),
	(ccss_block_get_border_width), (ccss_block_get_border_bottom),
	(ccss_block_get_border_bottom_color),
	(ccss_block_get_border_bottom_style),
	(ccss_block_get_border_bottom_with), (ccss_block_get_border_left),
	(ccss_block_get_border_left_color),
	(ccss_block_get_border_left_style),
	(ccss_block_get_border_left_width), (ccss_block_get_border_right),
	(ccss_block_get_border_right_color),
	(ccss_block_get_border_right_style),
	(ccss_block_get_border_right_width), (ccss_block_get_border_top),
	(ccss_block_get_border_top_color),
	(ccss_block_get_border_top_style),
	(ccss_block_get_border_top_width), (ccss_block_get_border_radius),
	(ccss_block_get_border_bottom_left_radius),
	(ccss_block_get_border_bottom_right_radius),
	(ccss_block_get_border_top_left_radius),
	(ccss_block_get_border_top_right_radius), (ccss_block_get_color):
	* ccss/ccss-block.h:
	* ccss/ccss-property.h:
	Towards internal property representation in a hash-table (not hooked up yet).

2008-10-07  Robert Staudinger  <robsta@gnome.org>

	* README: update after libccss split.

	* TODO:  update after libccss split.

	* ccss/ccss-parser.c (end_selector_cb), (ccss_parser_parse_file),
	(ccss_parser_parse_buffer):
	* ccss/ccss-parser.h:
	* ccss/ccss-stylesheet.c (ccss_stylesheet_new),
	(fix_dangling_selectors), (ccss_stylesheet_new_from_buffer),
	(ccss_stylesheet_new_from_file), (ccss_stylesheet_free),
	(ccss_stylesheet_query_type), (collect_type_r),
	(ccss_stylesheet_query_collect), (apply_type_r),
	(ccss_stylesheet_query_apply), (ccss_stylesheet_iter_init),
	(ccss_stylesheet_dump):
	Better naming consistency.

	* examples/example-1.c (main): 
	* examples/example-1.css:
	Use css from buffer instead of file.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* configure.in: fix PACKAGE.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-features.h.in:
	* configure.in:
	* libccss-1.pc.in:
	Some work towards an optional cairo dependency.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* ccss/ccss-gtk.sym.in:
	* ccss/ccss.sym.in:
	* ccss/exports.sym:
	* src/Makefile.am:
	* src/css2gtkrc.c:
	* src/exports.sym:
	* src/gce-color.c:
	* src/gce-color.h:
	* src/gce-functions.c:
	* src/gce-functions.h:
	* src/gce-maps.c:
	* src/gce-maps.h:
	* src/gce-node.c:
	* src/gce-node.h:
	* src/gce-rc-style.c:
	* src/gce-rc-style.h:
	* src/gce-serialize.c:
	* src/gce-serialize.h:
	* src/gce-style.c:
	* src/gce-style.h:
	* src/gce-theme.c:
	Fix `make distcheck'.

2008-10-06  Thomas Wood <thomas@linux.intel.com>

	* doc/Makefile.am: fix input path.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* configure.in:
	* libccss-1.pc.in:
	Export features (rsvg, gtk).

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* libccss-1.pc.in: fix name.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* Split out libccss.

2008-10-06  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-color.c:
	* libccss/ccss/ccss-function.c:
	* src/gce-functions.c:
	* themes/gtk-css-test/gtk-2.0/styles.css:
	Finish basic color functions support.

2008-10-03  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-color.c:
	* src/Makefile.am:
	* src/gce-color.c (added):
	* src/gce-color.h (added):
	* src/gce-functions.c:
	Initial gtk color mixing support (mix(), shade(), darker(), lighter()). Not completely hooked up yet.

2008-10-03  Robert Staudinger  <robsta@gnome.org>

	* TODO:
	* libccss/ccss/ccss-color.c:
	* src/gce-functions.c:
	Gtk color scheme support.

2008-10-03  Robert Staudinger  <robsta@gnome.org>

	* Makefile.am: `make distcheck' with standalone libccss.

	* libccss/cccss/Makefile.am:
	* libccss/cccss/example-1.c:
	* libccss/cccss/example-2.c:
	* libccss/cccss/example-2.css:
	Update/fix examples.

	* src/gce-rc-style.c: fix warning.

2008-10-03  Robert Staudinger  <robsta@gnome.org>

	patch by: Cygwin Ports Maintainer <yselkowitz at users.sourceforge.net>

	* libccss/ccss/Makefile.am: actually link dependent libraries.

2008-10-02  Robert Staudinger  <robsta@gnome.org>

	* libccss/cccss/Makefile.am:
	* libccss/cccss/example-1.c:
	* libccss/cccss/cccss.c (added):
	* libccss/cccss/example-2.css (added):
	* libccss/cccss/foo.svg (added):
	* libccss/cccss/cccss.h (added):
	* libccss/cccss/example-2.c (added):
	Add clutter example that involves node usage.

	* libccss/ccss/ccss-parser.c: create ID selectors for IDs.

	* src/gce-serialize.c: fill all node vtable fields.

2008-10-02  Robert Staudinger  <robsta@gnome.org>

	* configure.in:
	* libccss/cccss/Makefile.am:
	* libccss/cccss/example-1.c:
	* libccss/cccss/example-1.css:
	* libccss/cccss/example-1.css (added):
	* libccss/cccss/Makefile.am (added):
	* libccss/cccss/example-1.c (added):
	Add simple clutter example.

2008-10-02   Robert Staudinger  <robsta@gnome.org>

	* configure.in:
	* libccss/Makefile.am:
	* libccss/examples/Makefile.am:
	* libccss/examples/example-1.c:
	* libccss/examples/example-1.css (added):
	* libccss/examples/example-1.c (added):
	* libccss/cccss (added):
	* libccss/examples/example1.css (deleted):
	* libccss/examples/example1.c (deleted):
	Clutter integration infrastructure.

2008-10-02  Robert Staudinger  <robsta@gnome.org>

	* configure.in:
	* src/gce-rc-style.c:
	Introduce `--enable-rapid-development' configure argument.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* NEWS:
	* doc/Makefile.am:
	Streamline project page generation.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* configure.in: post-release version increment.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* Makefile.am:
	* NEWS:
	* README:
	* TODO:
	* configure.in:
	* doc/Makefile.am:
	* libccss/ccss/ccss-node.c:
	Release 0.2: update auxiliary files and fix `make distcheck'.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* themes/Gilouche-CSS/gtk-2.0/styles.css: use darker border color
	  for spin-button arrow borders.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* themes/Gilouche-CSS/gtk-2.0/styles.css: single interior border for 
	  spin-buttons.

2008-10-01 Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c: more robustness wrt bg-color.

	* libccss/ccss/ccss-border.c: fix setting border to `none'.

	* themes/Gilouche-CSS/gtk-2.0/styles.css: tweak roundings.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* themes/Gilouche-CSS/gtk-2.0/styles.css:
	* themes/Gilouche-CSS/gtk-2.0/optionmenu.svg (added):
	Teak theme, mainly roundings.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-parser.c:
	* libccss/ccss/ccss-selector.c:
	Make parsing more robust, discard erroneous blocks instead of bailing.

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* doc/01-introduction.txt: update.

2008-10-01  Andreas Nilsson  <andreas@imendio.com>

	* themes/Gilouche-CSS/gtk-2.0/slider-background.png:
	* themes/Gilouche-CSS/gtk-2.0/slider-background-horizontal.png:
	handlers on scrollbars. 

2008-10-01  Andreas Nilsson  <andreas@imendio.com>

	* themes/Gilouche-CSS/gtk-2.0/styles.css: fixed scrollbars

2008-10-01  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-gtk-style.c:
	* libccss/ccss/ccss-node.c:
	* libccss/ccss/ccss-node.h:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/exports.sym:
	* libccss/doc/ccss-sections.txt:
	* src/gce-style.c:
	Finish support for `background-attachment: fixed'.

2008-09-30  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember information about animations.

	* libccss/ccss/ccss-node.c:
	* libccss/ccss/ccss-node.h:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/exports.sym:
	* libccss/doc/ccss-sections.txt:
	* libccss/doc/tmpl/ccss-unused.sgml:
	* libccss/doc/tmpl/node.sgml:
	* src/gce-style.c:
	Work on fixed backgrounds, unfinished.

2008-09-30  Robert Staudinger  <robsta@gnome.org>

	* doc/01-introduction.txt (added): introductory article, unfinished.

2008-09-30  Robert Staudinger  <robsta@gnome.org>

	* libccss/examples/internal.c: fix build after cleanup.

2008-09-29  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-node.c:
	* libccss/ccss/ccss-node.h:
	* libccss/ccss/ccss-selector-group.c:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-stylesheet.c:
	* libccss/ccss/ccss.c:
	* libccss/ccss/ccss.h:
	* libccss/ccss/exports.sym:
	* libccss/doc/ccss-sections.txt:
	* libccss/doc/tmpl/ccss.sgml:
	* libccss/doc/tmpl/node.sgml:
	* src/gce-node.c:
	* src/gce-node.h:
	* src/gce-serialize.c:
	* src/gce-theme.c:
	Merge changes after bzr repo problems (https://bugs.launchpad.net/bugs/275861):
	  - Make implementation of ccss_node_class_t::is_a optional, fall back to
	    ccss_node_class_t::get_type.
	  - Attach node vtable to each node instance, simplifies the ccss API.

2008-09-29  Robert Staudinger  <robsta@gnome.org>

	* HACKING:
	* NEWS:
	* README:
	* TODO:
	Use markdown format.

	* Makefile.am: dist TODO.

	* configure.in:
	* doc/Makefile.am:
	Infrastructure for creating html pages of the auxiliary files.

2008-09-29  Robert Staudinger  <robsta@gnome.org>

	* ChangeLog: correctly format old entries.

	* Makefile.am:
	* TODO:
	* configure.in:
	* libccss/Makefile.am:
	* libccss/ccss/Makefile.am:
	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-block.c:
	* libccss/ccss/ccss-block.h:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-color.c:
	* libccss/ccss/ccss-color.h:
	* libccss/ccss/ccss-features.h.in:
	* libccss/ccss/ccss-function.c:
	* libccss/ccss/ccss-function.h:
	* libccss/ccss/ccss-gtk-style.c:
	* libccss/ccss/ccss-gtk-style.h:
	* libccss/ccss/ccss-image.c:
	* libccss/ccss/ccss-image.h:
	* libccss/ccss/ccss-node.c:
	* libccss/ccss/ccss-node.h:
	* libccss/ccss/ccss-parser.c:
	* libccss/ccss/ccss-parser.h:
	* libccss/ccss/ccss-position.c:
	* libccss/ccss/ccss-position.h:
	* libccss/ccss/ccss-property.c:
	* libccss/ccss/ccss-property.h:
	* libccss/ccss/ccss-selector-group-priv.h:
	* libccss/ccss/ccss-selector-group.c:
	* libccss/ccss/ccss-selector-group.h:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-selector.h:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/ccss-stylesheet.c:
	* libccss/ccss/ccss-stylesheet.h:
	* libccss/ccss/ccss.c:
	* libccss/ccss/ccss.h:
	* libccss/ccss/exports.sym:
	* libccss/doc/Makefile.am:
	* libccss/doc/ccss-docs.sgml:
	* libccss/doc/ccss-sections.txt:
	* libccss/doc/tmpl/ccss.sgml:
	* libccss/doc/tmpl/ccss_gtk_style_functions.sgml:
	* libccss/doc/tmpl/node.sgml:
	* libccss/doc/tmpl/selector_group.sgml:
	* libccss/doc/tmpl/style.sgml:
	* libccss/doc/tmpl/stylesheet.sgml:
	* libccss/examples/Makefile.am:
	* libccss/examples/example1.c:
	* libccss/examples/internal.c:
	* libccss/libccss-1.pc.in:
	* src/Makefile.am:
	* src/css2gtkrc.c:
	* src/gce-functions.c:
	* src/gce-functions.h:
	* src/gce-node.c:
	* src/gce-node.h:
	* src/gce-rc-style.c:
	* src/gce-rc-style.h:
	* src/gce-serialize.c:
	* src/gce-serialize.h:
	* src/gce-style.c:
	* src/gce-style.h:
	* src/gce-theme.c:
	Rename from `ccd' to `ccss'.

2008-09-26  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember how to handle drawing w/o widget pointer.

	* configure.in:
	* libccss/ccss/ccss-parser.c:
	Detect defective libcroco versions and conditionally work around bug #553937.

2008-09-26  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-color.c:
	* libccss/ccss/ccss-color.h:
	* libccss/ccss/ccss-parser.c:
	Work around random startup crashes caused by libcroco, see bug #553937.

2008-09-26  Robert Staudinger  <robsta@gnome.org>

	* TODO: mention css2gtkrc.

	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/exports.sym:
	Provide API to query for `border-color'.

	* src/Makefile.am:
	* src/css2gtkrc.c:
	Basic version of `css2gtkrc', a simple standalone gtkrc creation tool.

	* src/gce-rc-style.c:
	* src/gce-serialize.c:
	* src/gce-serialize.h:
	Finish and hook-up basic gtkrc creation.

2008-09-25  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember splitting out a CSS2 style sometime.

	* libccss/ccss/ccss-node.c:
	* libccss/ccss/ccss-node.h:
	Improve clarity of node-class vtable lifecycle.

	* libccss/ccss/ccss-selector-group.c:
	* libccss/ccss/ccss-selector.c:
	Use new node-class vtable API.

	* libccss/ccss/ccss-stylesheet.c:
	* libccss/ccss/ccss-stylesheet.h:
	* libccss/ccss/exports.sym:
	* libccss/doc/ccss-sections.txt:
	* libccss/doc/tmpl/stylesheet.sgml:
	New API to iterate over a stylesheet.

	* src/gce-node.c: stricter const-ness.
	* src/gce-parser.c:
	* src/gce-parser.h:
	* src/gce-rc-style.c:
	Use stylesheet iteration API, not hooked up yet.

2008-09-24  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember how to improve list iterations.
	* libccss/ccss/ccss-selector-group.c:
	* libccss/ccss/ccss-selector-group.h:
	Add convenience API for simple uses w/o a node implementation.

	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	Add convenience API to retrieve a style's colors.

	* libccss/ccss/exports.sym:
	* libccss/doc/ccss-sections.txt:
	* libccss/doc/tmpl/selector_group.sgml:
	* libccss/examples/example1.c:
	Update auxiliary files after the changes above.

	* src/Makefile.am:
	* src/gce-parser.c:
	* src/gce-parser.h:
	Start implementing css/gtkrc infrastructure, not hooked up yet.

	* themes/Gilouche-CSS/gtk-2.0/styles.css:
	  - Fix background-color for check- and option-primitives.
	  - Fix border-color for extension primitives.

2008-09-24  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c: do not round background-image offsets
	  because this leasts to 1px-off errors. 

	* themes/Gilouche-CSS/gtk-2.0/Makefile.am:
	* themes/Gilouche-CSS/gtk-2.0/styles.css:
	Use CSS borders	for check- and option-styling, and make them cover all
	of their allocated area.

2008-09-23  Robert Staudinger  <robsta@gnome.org>

	* TODO: thoroughly revisit and update the next three release cycles.

2008-09-23  Robert Staudinger  <robsta@gnome.org>

	* TODO: add section regarding theme work.
	* themes/Gilouche-CSS/gtk-2.0/styles.css: use 3px rounded corners.

2008-09-23  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-gtk-style.c: fix off-by-one errors when drawing
	  rectangles with gaps.

2008-09-23  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/Makefile.am:
	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-block.c:
	* libccss/ccss/ccss-block.h:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-color.c:
	* libccss/ccss/ccss-color.h:
	* libccss/ccss/ccss-parser.c:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/ccss.h:
	Make `color' a css property of its own.

2008-09-23  Robert Staudinger  <robsta@gnome.org>

	* TODO: account for progress.

	* libccss/ccss/Makefile.am:
	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-block.h:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-parser.c:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/ccss-tinge.c:
	* libccss/ccss/ccss-tinge.h:
	* libccss/ccss/ccss.h:
	Rename `color' to `tinge' in preparation of color properties.

2008-09-22  Robert Staudinger  <robsta@gnome.org>

	* themes/Gilouche-CSS/gtk-2.0/styles.css: fix sliders.

2008-09-22  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-position.c:
	* libccss/ccss/ccss-position.h:
	Fix `background-position' issues.

	* themes/Gilouche-CSS/gtk-2.0/styles.css:
	Fix theme now that we mostly adhere to CSS background image defaults.

2008-09-22  Robert Staudinger  <robsta@gnome.org>

	* TODO: remember some background-image standard compliancy issues.

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-position.c:
	Initial background-image support.

2008-09-22  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c: rely on correctly initialised styles.

	* libccss/ccss/ccss-background.h: consistently put the property spec at
	  the beginning of property structs.

	* libccss/ccss/ccss-property.c:
	* libccss/ccss/ccss-property.h:

	Add ccss_property_is_set() to consistently check on properties.
	* libccss/ccss/ccss-style.c: initialise style to built-in defaults.

2008-09-19 Robert Staudinger  <robsta@gnome.org>

	* TODO: what todo regarding internals for the next release.

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	More work on tile creation. Not hooked up yet.

	* libccss/ccss/ccss-gtk-style.c:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	Propagate background properties thru the selector chain.

2008-09-19  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-image.c:
	* libccss/ccss/ccss-image.h:
	Use a cairo pattern for the internal representation of an image instead
	of a surface.

2008-09-18  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-position.c:
	* libccss/ccss/ccss-position.h:
	Background tile creation. Not hooked up yet.

2008-09-18  Robert Staudinger  <robsta@gnome.org>

	* TODO: link screenshots of inspirational themes/mockups.

	* configure.in: tweak configuration summary output.

	* libccss/ccss/Makefile.am:
	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-position.c:
	* libccss/ccss/ccss-position.h:
	Generic position parsing infrastructure. Parse background image
	settings.

2008-09-16  Robert Staudinger  <robsta@gnome.org>

	* configure.in:
	* libccss/ccss/ccss-features.h.in:
	* libccss/ccss/ccss-function.c:
	* libccss/ccss/ccss-image.c:
	* libccss/doc/ccss-docs.sgml:
	* src/gce-functions.c:
	Optionally depend on libsoup for URI parsing towards SVG sub-image support.

	* src/gce-node.c:
	* src/gce-style.c:
	Fix typos in debug output.

2008-09-16  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	More consistent naming in the `border join' struct (s/radius_spec/spec).

2008-09-16  Robert Staudinger  <robsta@gnome.org>

	* configure.in: actually build debug code when configured to to so.

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-style.c:
	Use property spec to determine whether properties are set and make
	the flags private to the border implementation.

2008-09-16  Robert Staudinger  <robsta@gnome.org>

	* src/gce-node.c:
	* src/gce-node.h:
	* src/gce-style.c:
	Make node implementation self contained to the theme engine.

2008-09-15  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-block.c:
	* libccss/ccss/ccss-block.h:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-color.c:
	* libccss/ccss/ccss-color.h:
	* libccss/ccss/ccss-image.c:
	* libccss/ccss/ccss-image.h:
	* libccss/ccss/ccss-property.c:
	* libccss/ccss/ccss-property.h:
	* libccss/ccss/ccss-selector-group.c:
	* libccss/ccss/ccss-selector-group.h:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-selector.h:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	* libccss/ccss/ccss-stylesheet.c:
	* libccss/ccss/ccss-stylesheet.h:
	Only build debug code if requested at configure-time.

2008-09-15  Robert Staudinger  <robsta@gnome.org>

	* README:
	* TODO:
	Update.

	* configure.in:
	* libccss/ccss/Makefile.am:
	* libccss/ccss/exports.sym:
	* libccss/examples/Makefile.am:
	* src/Makefile.am:
	* src/exports.sym:
	Only export public API.

2008-09-15  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-selector.c: fix specificity initialisation of
	  attribute- and pseudo-class selectors.

2008-09-15  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-gtk-style.c:
	Fix glitches for gap-boxes with insanely big border radii.

2008-09-14  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-border.c: background includes area "under" borders.

2008-09-12  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-gtk-style.c:
	Restrict rounded corners' radius to half of the relevant object extent.

2008-09-12  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-background.h:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-gtk-style.c:
	* libccss/ccss/ccss-style.c:
	* src/gce-style.c:
	Draw gap-boxes with rounded corners correctly.

2008-09-11  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* src/gce-style.c:
	Fix background drawing both color and images are used.

2008-09-11  Robert Staudinger  <robsta@gnome.org>

	* libccss/ccss/ccss-background.c:
	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-style.c:
	Fix background clipping with rounded corners.

2008-09-10  Robert Staudinger  <robsta@gnome.org>

	* TODO: mention widget path helper app.

	* libccss/ccss/ccss-border.c:
	* libccss/ccss/ccss-border.h:
	* libccss/ccss/ccss-gtk-style.c:
	* libccss/ccss/ccss-selector.c:
	* libccss/ccss/ccss-style.c:
	* libccss/ccss/ccss-style.h:
	Initial support for rounded borders.

	* libccss/examples/internal.c: fix after rounded borders internal API
	  change.

2008-09-09  Robert Staudinger  <robsta@gnome.org>

	* README: update SVN repo address.

	* TODO: update roadmap after release.

	* libccss/ccss/ccss-border.c: parse single-value border properties like
	  e.g. `border-left-color'.

2008-08-22  Robert Staudinger  <robsta@gnome.org>

	* Initial import.

